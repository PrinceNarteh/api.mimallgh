// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

enum UserLevel {
  level_one
  level_two
  level_three
  super_user
}

model User {
  id              String     @id @default(cuid())
  firstName       String     @map("first_name")
  lastName        String     @map("last_name")
  middleName      String?    @map("middle_name")
  address         String?
  phoneNumber     String     @unique @map("phone_number")
  alternateNumber String?    @map("alternate_number")
  nationality     String?
  email           String     @unique
  password        String
  cardType        String?    @map("card_type")
  cardNumber      String?    @map("card_number")
  active          Boolean    @default(true)
  role            UserRole   @default(user)
  level           UserLevel  @default(level_one)
  orders          Order[]
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  image           UserImage?
}

model UserImage {
  id         String   @id @default(cuid())
  public_id  String
  secure_url String
  userId     String   @unique @map("user_id")
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}

model Order {
  id        String      @id @default(cuid())
  orderId   String      @map("order_id")
  amount    Float
  items     OrderItem[]
  userId    String      @map("user_id")
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
}

model OrderItem {
  id          String   @id @default(cuid())
  productId   String   @map("product_id")
  productName String
  quantity    Int
  price       Float
  shopId      String   @map("shop_id")
  shopName    String   @map("shop_name")
  orderId     String   @map("order_id")
  Order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
}

enum ProductCategory {
  food
  fashion_and_wears
  grocery_and_general
  health_and_wellness
  home_and_electrical_appliances
  personal_services
  printing_and_stationery
  tech
}

model ProductImage {
  id         String   @id @default(cuid())
  public_id  String
  secure_url String
  product    Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String?  @map("product_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}

model Product {
  id                 String          @id @default(cuid())
  title              String
  description        String          @db.LongText
  price              Float
  discountPercentage Int             @default(0) @map("discount_percentage")
  stock              Int
  brand              String
  category           ProductCategory
  shopId             String          @map("shop_id")
  shop               Shop            @relation(fields: [shopId], references: [id])
  images             ProductImage[]
  createdAt          DateTime        @default(now()) @map("created_at")
  updatedAt          DateTime        @updatedAt @map("updated_at")
}

model ShopImage {
  id         String   @id @default(cuid())
  public_id  String
  secure_url String
  shopId     String   @unique @map("shop_id")
  shop       Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
}

model Shop {
  id              String     @id @default(cuid())
  name            String
  shopCode        String     @map("shop_code")
  password        String
  plainPassword   String?    @map("plain_password")
  description     String
  location        String
  mapDirection    String     @map("map_description")
  phoneNumber     String     @map("phone_number")
  openingTime     String     @map("opening_time")
  closingTime     String     @map("closing_time")
  alternateNumber String?    @map("alternate_number")
  whatsappNumber  String?    @map("whatsapp_number")
  instagramHandle String?    @map("instagram_number")
  facebookHandle  String?    @map("facebook_number")
  image           ShopImage?
  products        Product[]
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
}
