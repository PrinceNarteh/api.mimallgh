// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  SHOP_OWNER
}

enum Level {
  LEVEL_ONE
  LEVEL_TWO
  LEVEL_THREE
  SUPER_USER
}

model User {
  id              String   @id @default(cuid())
  firstName       String
  lastName        String
  middleName      String?
  address         String?
  phoneNumber     String
  alternateNumber String?
  nationality     String
  email           String   @unique
  password        String
  image           String?
  cardType        String?
  cardNumber      String?
  active          Boolean  @default(true)
  role            Role
  level           Level?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  shop            Shop?
}

model Shop {
  id              String    @id @default(cuid())
  email           String
  password        String
  name            String
  description     String    @db.Text
  location        String
  address         String?
  phoneNumber     String
  alternateNumber String?
  image           String?
  whatsappNumber  String?
  instagramHandle String?
  facebookHandle  String?
  openingTime     String
  closingTime     String
  ownerId         String    @unique
  owner           User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  products        Product[]
  branches        Branch[]
}

model Branch {
  id          String  @id @default(cuid())
  location    String
  address     String?
  phoneNumber String
  shop        Shop?   @relation(fields: [shopId], references: [id], onDelete: Cascade)
  shopId      String?
}

enum Category {
  FOOD
  FASHION_AND_WEARS
  GROCERY_AND_GENERAL
  HEALTH_AND_WELLNESS
  HOME_AND_ELECTRICAL_APPLIANCES
  PERSONAL_SERVICES
  PRINTING_AND_STATIONERY
  TECH
}

model Image {
  id         String  @id @default(cuid())
  public_id  String
  secure_url String
  productId  String
  product    Product @relation(fields: [productId], references: [id])
}

model Product {
  id                 String   @id @default(cuid())
  title              String
  description        String   @db.LongText
  price              Float
  discountPercentage Float    @default(0)
  stock              Int      @default(0)
  brand              String
  category           Category
  images             Image[]
  shopId             String
  shop               Shop     @relation(fields: [shopId], references: [id], onDelete: Cascade)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
